@model PhotoFolio.ViewModels.AccountViewModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Account Settings</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Custom CSS -->
    <style>
        :root {
            --bs-success: #2e8b57;
            --bs-success-rgb: 46, 139, 87;
            --bs-success-hover: #267349;
        }

        .btn-success {
            background-color: var(--bs-success);
            border-color: var(--bs-success);
        }

        .btn-success:hover,
        .btn-success:active,
        .btn-success:focus {
            background-color: var(--bs-success-hover) !important;
            border-color: var(--bs-success-hover) !important;
        }

        .bg-success {
            background-color: var(--bs-success) !important;
        }

        .text-success {
            color: var(--bs-success) !important;
        }

        .form-control:focus {
            border-color: var(--bs-success);
            box-shadow: 0 0 0 0.25rem rgba(var(--bs-success-rgb), 0.25);
        }

        .min-vh-100 {
            min-height: 100vh;
        }

        .invalid-feedback {
            display: none;
        }

        .form-control:invalid ~ .invalid-feedback {
            display: block;
        }

        .form-control:invalid {
            border-color: #dc3545;
        }
    </style>
</head>
<body class="bg-light min-vh-100">
<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card border-0 shadow">
                <div class="card-header bg-success text-white">
                    <h3 class="mb-0">Account Settings</h3>
                </div>
                <div class="card-body">
                    <!-- Success Alert (hidden by default) -->
                    <div class="alert alert-success d-none" role="alert" id="success-alert">
                        Your account information has been updated successfully!
                    </div>

                    <form id="account-settings-form" novalidate>
                        <div class="mb-3">
                            <label for="name" class="form-label">Full Name</label>
                            <input type="text" class="form-control" id="name" name="name"
                                   placeholder="Enter your full name" required minlength="2">
                            <div class="invalid-feedback">Name is required and must be at least 2 characters.</div>
                        </div>

                        <div class="mb-3">
                            <label for="email" class="form-label">Email Address</label>
                            <input type="email" class="form-control" id="email" name="email"
                                   placeholder="Enter your email" required
                                   pattern="[a-z0-9._%+-]+[a-z0-9.-]+\.[a-z]{2,}$">
                            <div class="invalid-feedback">Please enter a valid email address.</div>
                        </div>

                        <hr class="my-4">
                        <h5 class="text-success mb-3">Change Password</h5>

                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">Current Password</label>
                            <input type="password" class="form-control" id="currentPassword" name="currentPassword"
                                   required>
                            <div class="invalid-feedback">Current password is required to change password.</div>
                        </div>

                        <div class="mb-3">
                            <label for="newPassword" class="form-label">New Password</label>
                            <input type="password" class="form-control" id="newPassword" name="newPassword"
                                   minlength="8"
                                   pattern="^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$!%*?&])[A-Za-z\d$!%*?&]{8,}$">
                            <div class="form-text">
                                Password must be at least 8 characters and include uppercase, lowercase, number, and
                                special character.
                            </div>
                            <div class="invalid-feedback">
                                Password must contain at least one uppercase letter, one lowercase letter, one number
                                and one special character.
                            </div>
                        </div>

                        <div class="mb-4">
                            <label for="confirmPassword" class="form-label">Confirm New Password</label>
                            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword">
                            <div class="invalid-feedback">Passwords do not match.</div>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-success btn-lg" id="submit-button">
                                Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<!-- Simple form validation script -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('account-settings-form');
        const newPassword = document.getElementById('newPassword');
        const confirmPassword = document.getElementById('confirmPassword');
        const submitButton = document.getElementById('submit-button');
        const successAlert = document.getElementById('success-alert');

        // Check if passwords match
        confirmPassword.addEventListener('input', function () {
            if (this.value !== newPassword.value) {
                this.setCustomValidity('Passwords do not match');
            } else {
                this.setCustomValidity('');
            }
        });

        // Form submission
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            if (!form.checkValidity()) {
                event.stopPropagation();
                form.classList.add('was-validated');
                return;
            }

            // Show loading state
            const originalButtonText = submitButton.innerHTML;
            submitButton.disabled = true;
            submitButton.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Saving...';

            // Simulate form submission (replace with your actual form submission)
            setTimeout(function () {
                // Show success message
                successAlert.classList.remove('d-none');

                // Reset form
                form.reset();
                form.classList.remove('was-validated');

                // Reset button
                submitButton.disabled = false;
                submitButton.innerHTML = originalButtonText;

                // Hide success message after 3 seconds
                setTimeout(function () {
                    successAlert.classList.add('d-none');
                }, 3000);
            }, 1500);
        });
    });
</script>
</body>
</html>