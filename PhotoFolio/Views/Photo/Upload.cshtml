@model IEnumerable<PhotoFolio.Models.Photo>

@{
    ViewData["Title"] = "Upload & Gallery";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <title>Upload & Gallery</title>
    <!-- Bootstrap CSS (you can switch to local file if needed) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"/>
    <!-- Bootstrap Icons (optional) -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css"/>

    <style>
        .text-dark-green {
            color: #0f5132;
        }

        #dropzone {
            border: 2px dashed #0f5132;
            cursor: pointer;
            padding: 2rem;
            text-align: center;
            position: relative;
        }

        .gallery-item:hover .gallery-overlay {
            opacity: 1;
        }

        .gallery-overlay {
            background: rgba(0, 0, 0, 0.4);
            opacity: 0;
            transition: opacity .3s;
        }

        .gallery-overlay .btn {
            margin: 0 0.25rem;
        }
    </style>
</head>
<body class="bg-light">
<div class="container py-5">
    <!-- Page Title -->
    <div class="row justify-content-center mb-5">
        <div class="col-lg-8 text-center">
            <h1 class="display-5 fw-bold text-dark-green">Photo Gallery</h1>
            <p class="lead">Upload your favorite photos and share your moments</p>
        </div>
    </div>

    <!-- Upload Form Section -->
    <div class="row justify-content-center mb-5">
        <div class="col-lg-8">
            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success">@TempData["Success"]</div>
            }


            <form asp-action="Upload" asp-controller="Photo" method="post" enctype="multipart/form-data">
                @Html.AntiForgeryToken()
                <div id="dropzone">
                    <!-- FIX: Move file input out of overlay position -->
                    <input type="file" id="file-input" name="files" multiple accept="image/*"
                           style="display: none;"/>
                    <div class="dropzone-content">
                        <i class="bi bi-cloud-arrow-up fs-1 text-success mb-3"></i>
                        <h4>Drag &amp; Drop Photos Here</h4>
                        <p>or</p>
                        <button type="button" class="btn btn-success mb-2" id="browse-btn">Browse Files</button>
                        <p class="mt-2 text-muted">Upload up to 10 photos at once</p>
                    </div>
                </div>

                <br>
                <!-- FIX: Add selected files display -->
                <div id="selected-files" class="selected-files d-none">
                    <h6>Selected Files:</h6>
                    <ul id="file-list" class="list-group"></ul>
                </div>

                <!-- ... progress bar unchanged ... -->

                <div class="d-grid mt-4">
                    <button type="submit" class="btn btn-success btn-lg">Start Upload</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Gallery Section -->
    <div class="row">
        <div class="col-lg-12">
            <h3 class="text-dark-green mb-4">Your Photos</h3>

            @if (!Model.Any())
            {
                <p class="text-muted">You haven’t uploaded any photos yet.</p>
            }
            else
            {
                <div class="row g-4">
                    @foreach (var photo in Model)
                    {
                        <div class="col-6 col-md-4 col-lg-3">
                            <div class="card position-relative">
                                <img
                                    src="@photo.Url" 
                                    class="card-img-top"
                                    style="height:200px; object-fit:cover;"
                                    alt=""/>
                                <div
                                    class="gallery-overlay position-absolute top-0 start-0 w-100 h-100 d-flex justify-content-center align-items-center">
                                    <button
                                        class="btn btn-outline-light btn-sm me-1"
                                        onclick="window.open('@Url.Action("GetImage", "Photo", new { id = photo.Id })','_blank')">
                                        <i class="bi bi-zoom-in"></i>
                                    </button>
                                    <form asp-action="Delete" asp-controller="Photo" asp-route-id="@photo.Id"
                                          method="post" onsubmit="return confirm('Delete this photo?');">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-outline-danger btn-sm">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </form>
                                </div>
                                <div class="card-body">
                                    <p class="card-text text-success">@photo.FileName</p>
                                    <p class="card-subtitle mb-2 text-muted">
                                        Uploaded: @photo.UploadedAt.ToLocalTime().ToString("dd MMM yyyy HH:mm")
                                    </p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

<!-- jQuery & Bootstrap JS -->
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<script>

    $(function () {
        var dropzone = $("#dropzone");
        var fileInput = $("#file-input");
        var browseBtn = $("#browse-btn");
        var selectedFiles = $("#selected-files");
        var fileList = $("#file-list");

        // FIX: Properly handle browse button click
        browseBtn.on("click", function () {
            fileInput.trigger('click');
        });

        // FIX: Handle file selection
        fileInput.on("change", function(e) {
            fileList.empty();
            if (this.files.length > 0) {
                selectedFiles.removeClass('d-none');

                for (var i = 0; i < this.files.length; i++) {
                    var file = this.files[i];
                    fileList.append(
                        `<li class="list-group-item d-flex justify-content-between align-items-center">
                            ${file.name}
                            <span class="badge bg-primary rounded-pill">${formatFileSize(file.size)}</span>
                        </li>`
                    );
                }
            } else {
                selectedFiles.addClass('d-none');
            }
        });

        dropzone.on("dragover", function (e) {
            e.preventDefault();
            dropzone.addClass("border-success");
        });

        dropzone.on("dragleave", function () {
            dropzone.removeClass("border-success");
        });

        dropzone.on("drop", function (e) {
            e.preventDefault();
            dropzone.removeClass("border-success");

            // FIX: Handle dropped files
            if (e.originalEvent.dataTransfer.files.length > 0) {
                fileInput[0].files = e.originalEvent.dataTransfer.files;
                fileInput.trigger('change');
            }
        });

        // Helper function to format file sizes
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2) + ' ' + sizes[i]);
        }
    });

</script>
</body>
</html>
